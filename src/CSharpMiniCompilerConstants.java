/* Generated By:JavaCC: Do not edit this line. CSharpMiniCompilerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CSharpMiniCompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PLUS = 5;
  /** RegularExpression Id. */
  int MINUS = 6;
  /** RegularExpression Id. */
  int DIVIDE = 7;
  /** RegularExpression Id. */
  int MULTIPLY = 8;
  /** RegularExpression Id. */
  int EQ = 9;
  /** RegularExpression Id. */
  int ASSIGN = 10;
  /** RegularExpression Id. */
  int PLUSEQ = 11;
  /** RegularExpression Id. */
  int MINUSEQ = 12;
  /** RegularExpression Id. */
  int MULEQ = 13;
  /** RegularExpression Id. */
  int DIVEQ = 14;
  /** RegularExpression Id. */
  int LT = 15;
  /** RegularExpression Id. */
  int GT = 16;
  /** RegularExpression Id. */
  int LE = 17;
  /** RegularExpression Id. */
  int GE = 18;
  /** RegularExpression Id. */
  int NEQ = 19;
  /** RegularExpression Id. */
  int BOOL_AND = 20;
  /** RegularExpression Id. */
  int BOOL_OR = 21;
  /** RegularExpression Id. */
  int LPAREN = 22;
  /** RegularExpression Id. */
  int RPAREN = 23;
  /** RegularExpression Id. */
  int LCURLY = 24;
  /** RegularExpression Id. */
  int RCURLY = 25;
  /** RegularExpression Id. */
  int LBRACKET = 26;
  /** RegularExpression Id. */
  int RBRACKET = 27;
  /** RegularExpression Id. */
  int NAMESPACE = 28;
  /** RegularExpression Id. */
  int PUBLIC = 29;
  /** RegularExpression Id. */
  int STATIC = 30;
  /** RegularExpression Id. */
  int VOID = 31;
  /** RegularExpression Id. */
  int MAIN = 32;
  /** RegularExpression Id. */
  int CLASS = 33;
  /** RegularExpression Id. */
  int COMMA = 34;
  /** RegularExpression Id. */
  int IF = 35;
  /** RegularExpression Id. */
  int ELSE = 36;
  /** RegularExpression Id. */
  int INC = 37;
  /** RegularExpression Id. */
  int DEC = 38;
  /** RegularExpression Id. */
  int DO = 39;
  /** RegularExpression Id. */
  int WHILE = 40;
  /** RegularExpression Id. */
  int SWITCH = 41;
  /** RegularExpression Id. */
  int CASE = 42;
  /** RegularExpression Id. */
  int DEF = 43;
  /** RegularExpression Id. */
  int BREAK = 44;
  /** RegularExpression Id. */
  int FALSE = 45;
  /** RegularExpression Id. */
  int TRUE = 46;
  /** RegularExpression Id. */
  int COLON = 47;
  /** RegularExpression Id. */
  int FOR = 48;
  /** RegularExpression Id. */
  int SEMICOLON = 49;
  /** RegularExpression Id. */
  int DOT = 50;
  /** RegularExpression Id. */
  int INT_DT = 51;
  /** RegularExpression Id. */
  int DOUBLE_DT = 52;
  /** RegularExpression Id. */
  int STRING_DT = 53;
  /** RegularExpression Id. */
  int BOOL_DT = 54;
  /** RegularExpression Id. */
  int PRINT = 55;
  /** RegularExpression Id. */
  int DIGIT = 56;
  /** RegularExpression Id. */
  int LETTER = 57;
  /** RegularExpression Id. */
  int INT = 58;
  /** RegularExpression Id. */
  int DOUBLE = 59;
  /** RegularExpression Id. */
  int VAR_NAME = 60;
  /** RegularExpression Id. */
  int STRING = 61;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"+\"",
    "\"-\"",
    "\"/\"",
    "\"*\"",
    "\"==\"",
    "\"=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"&&\"",
    "\"||\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"namespace\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"Main\"",
    "\"class\"",
    "\",\"",
    "\"if\"",
    "\"else\"",
    "\"++\"",
    "\"--\"",
    "\"do\"",
    "\"while\"",
    "\"switch\"",
    "\"case\"",
    "\"default\"",
    "\"break\"",
    "\"false\"",
    "\"true\"",
    "\":\"",
    "\"for\"",
    "\";\"",
    "\".\"",
    "\"int\"",
    "\"double\"",
    "\"string\"",
    "\"bool\"",
    "\"Console.WriteLine\"",
    "<DIGIT>",
    "<LETTER>",
    "<INT>",
    "<DOUBLE>",
    "<VAR_NAME>",
    "<STRING>",
  };

}
